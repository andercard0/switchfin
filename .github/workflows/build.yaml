name: build

on:
  push:
    tags-ignore: [ switch-portlibs ]
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:
    inputs:
      snap:
        description: 'build snap'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  upload-release:
    needs: [ build-msvc-x64, build-switch, build-macos ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/download-artifact@v3
    - name: Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        name: Switchfin ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        generate_release_notes: true
        files: '*/*'
        body: |
          ![download](https://img.shields.io/github/downloads/${{ github.repository }}/${{ github.ref_name }}/total?label=Downloads)

  build-switch:
    runs-on: ubuntu-latest
    container:
      image: devkitpro/devkita64
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Update dependencies
      run: |
        for p in `curl -sL https://api.github.com/repos/${{ github.repository }}/releases/tags/switch-portlibs | grep browser_download_url | cut -d\" -f4`; do dkp-pacman --noconfirm -U $p; done
        curl -sL https://github.com/dragonflylee/hacBrewPack/releases/download/v3.06/hacbrewpack-v3.06_linux-amd64.tar.gz | tar zxf - -C /usr/local/bin
    - name: Set workspace permissions
      run: |
        chown $(id -u):$(id -g) -R "$GITHUB_WORKSPACE"
        git config --system --add safe.directory '*'
    - name: Build nro
      run: |
        cmake -B build_switch -DPLATFORM_SWITCH=ON -DBUILTIN_NSP=ON
        make -C build_switch Switchfin.nro -j$(nproc)
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switchfin-switch-${{ steps.vars.outputs.sha_short }}
        path: build_switch/*.nro

  build-snap:
    runs-on: ubuntu-latest
    if: github.event.inputs.snap == 'true'
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Update gamepad mappings
      run: |
        BRLS_GLFW="library/borealis/library/lib/extern/glfw"
        cmake -P ${BRLS_GLFW}/CMake/GenerateMappings.cmake ${BRLS_GLFW}/src/mappings.h.in ${BRLS_GLFW}/src/mappings.h
    - name: Build snap
      run: |
        docker run --rm --tty -v $PWD:/data -w /data/scripts --privileged diddledani/snapcraft:core20
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switchfin-snap-${{ steps.vars.outputs.sha_short }}
        path: scripts/*.snap

  build-macos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Install deps
      run: |
        brew install create-dmg dylibbundler webp boost
        brew tap xfangfang/wiliwili
        brew install -v mpv-wiliwili
    - name: Update gamepad mappings
      run: |
        BRLS_GLFW="library/borealis/library/lib/extern/glfw"
        cmake -P ${BRLS_GLFW}/CMake/GenerateMappings.cmake ${BRLS_GLFW}/src/mappings.h.in ${BRLS_GLFW}/src/mappings.h
    - name: Build App
      run: |
        cmake -B build -DPLATFORM_DESKTOP=ON -DUSE_BOOST_FILESYSTEM=ON -DCMAKE_BUILD_TYPE=Release
        make -C build -j$(sysctl -n hw.ncpu)
    - name: Create DMG
      run: |
        mkdir -p dist
        mv build/Switchfin.app dist/
        cp README.md dist
        create-dmg --window-pos 200 120 --window-size 800 400 \
          --icon-size 100 --icon "Switchfin.app" 200 190 \
          --icon "README.md" 400 100 --hide-extension "Switchfin.app" \
          --app-drop-link 600 185 --volicon ./scripts/dmg.icns \
          --volname "Switchfin" Switchfin-macOS.dmg "dist/"
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switchfin-macos-${{ steps.vars.outputs.sha_short }}
        path: Switchfin-*.dmg

  build-msvc-x64:
    runs-on: windows-2022
    steps:
    - name: Setup Windows 10 SDK
      uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.11
      with:
        sdk-version: 19041
    - name: Install xmake
      shell: powershell
      run: |
        Invoke-Expression (Invoke-Webrequest 'https://xmake.io/psget.text' -UseBasicParsing).Content
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Cache xmake packages
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-build
        path: |
          ${{ runner.temp }}/.xmake/packages
    - name: Build
      shell: powershell
      run: |
        $env:path+=";$env:USERPROFILE\xmake"
        $env:XMAKE_GLOBALDIR="${{ runner.temp }}"
        xmake config -c -y
        xmake build -y
        cd build\windows\x64\release
        7z a "$env:GITHUB_WORKSPACE\Switchfin-msvc-x64.zip" *
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switchfin-win64
        path: Switchfin-*.zip
