name: build

on:
  push:
    tags-ignore: 
    - switch-portlibs
    - mingw-packages
    paths-ignore:
    - scripts/mingw64/*/*
    - scripts/switch/*/*
    - images/*
    - README.md
    branches: [ dev ]
  pull_request:
    paths-ignore:
    - scripts/mingw64/*/*
    - scripts/switch/*/*
    branches: [ dev ]
  workflow_dispatch:
    inputs:
      nx:
        description: build nintendo switch
        type: boolean
      macos:
        description: build macos dmg
        type: boolean
      snap:
        description: build linux snap
        type: boolean
      mingw64:
        description: build win64 mingw64
        type: boolean
      msvc:
        description: build win64 msvc
        type: boolean

permissions:
  contents: write

jobs:
  upload-release:
    needs: [ build-mingw, build-nx, build-macos ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/download-artifact@v3
    - name: Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        name: Switchfin ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        generate_release_notes: true
        files: |
          switchfin-windows-*/*.7z
          switchfin-macos-*/*.dmg
          switchfin-switch-opengl-*/*.nro
        body: |
          ![download](https://img.shields.io/github/downloads/${{ github.repository }}/${{ github.ref_name }}/total?label=Downloads)

  build-nx:
    runs-on: ubuntu-latest
    if: ${{ inputs.nx || github.event_name != 'workflow_dispatch'}}
    strategy:
      fail-fast: false
      matrix:
        driver: [opengl, deko3d]
    container:
      image: devkitpro/devkita64
    env:
      BASE_URL: https://github.com/${{ github.repository }}/releases/download/switch-portlibs
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Set workspace permissions
      run: |
        chown $(id -u):$(id -g) -R "$GITHUB_WORKSPACE"
        git config --system --add safe.directory '*'
    - name: Update dependencies
      run: |
        dkp-pacman --noconfirm -U $BASE_URL/hacBrewPack-3.05-1-any.pkg.tar.zst
        for pkg in curl-7.71.1-1 harfbuzz-8.2.2-1 libass-0.17.1-1 ffmpeg-6.1-1 libmpv-0.36.0-2 nspmini-main-1; do
          dkp-pacman --noconfirm -U $BASE_URL/switch-${pkg}-any.pkg.tar.zst
        done
    - name: Build opengl
      if: ${{ matrix.driver == 'opengl' }}
      run: |
        cmake -B build_switch -DPLATFORM_SWITCH=ON -DBUILTIN_NSP=ON -DVERSION_BUILD=${{ github.run_number }}
        make -C build_switch Switchfin.nro -j$(nproc)
    - name: Update deko3d
      if: ${{ matrix.driver == 'deko3d' }}
      run: |
        for pkg in deko3d-master-1 libuam-master-1 switch-libmpv-deko3d-0.36.0-3; do
          dkp-pacman --noconfirm -U $BASE_URL/${pkg}-any.pkg.tar.zst
        done
    - name: Build deko3d
      if: ${{ matrix.driver == 'deko3d' }}
      run: |
        cmake -B build_switch -DPLATFORM_SWITCH=ON -DBUILTIN_NSP=ON -DUSE_DEKO3D=ON -DVERSION_BUILD=${{ github.run_number }}
        make -C build_switch Switchfin.nro -j$(nproc)
    - name: Set outputs
      id: vars
      run: echo "sha_short=${{ matrix.driver }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switchfin-switch-${{ steps.vars.outputs.sha_short }}
        path: |
          build_switch/Switchfin.nro
          build_switch/Switchfin.elf

  build-snap:
    runs-on: ubuntu-latest
    if: ${{ inputs.snap }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Build snap
      run: |
        docker run --rm --tty -v $PWD:/data -w /data/scripts --privileged diddledani/snapcraft:core20
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switchfin-snap-${{ steps.vars.outputs.sha_short }}
        path: scripts/*.snap

  build-macos:
    runs-on: macos-12
    if: ${{ inputs.macos || github.event_name != 'workflow_dispatch'}}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install deps
      run: |
        brew install create-dmg dylibbundler webp boost
        brew tap xfangfang/wiliwili
        brew install -v mpv-wiliwili
    - name: Build App
      run: |
        cmake -B build -DPLATFORM_DESKTOP=ON -DUSE_BOOST_FILESYSTEM=ON -DVERSION_BUILD=${{ github.run_number }}
        make -C build -j$(sysctl -n hw.ncpu)
    - name: Create DMG
      run: |
        mkdir -p dist
        mv build/Switchfin.app dist/
        cp README.md dist
        create-dmg --window-pos 200 120 --window-size 800 400 \
          --icon-size 100 --icon "Switchfin.app" 200 190 \
          --icon "README.md" 400 100 --hide-extension "Switchfin.app" \
          --app-drop-link 600 185 --volicon ./scripts/dmg.icns \
          --volname "Switchfin" Switchfin-macOS.dmg "dist/"
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switchfin-macos-${{ steps.vars.outputs.sha_short }}
        path: Switchfin-*.dmg

  build-mingw:
    if: ${{ inputs.mingw64 == true || github.event_name != 'workflow_dispatch'}}
    strategy:
      fail-fast: false
      matrix:
        msystem: [ MINGW64 ]
        driver: [ GL3, D3D11 ]
    runs-on: windows-latest
    env:
      MSYSTEM: ${{ matrix.msystem }}
      MSYS2_PATH_TYPE: inherit
      DRIVER: ${{ matrix.driver }}
    defaults:
      run:
        shell: C:\shells\msys2bash.cmd {0}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install dependency
      run: |
        for pkg in curl-8.4.0-1 mpv-0.36.0-4 libwebp-1.3.2-1; do
          curl -sLO https://github.com/${{ github.repository }}/releases/download/mingw-packages/${MINGW_PACKAGE_PREFIX}-${pkg}-any.pkg.tar.zst
        done
        pacman -U --noconfirm *.pkg.tar.zst

        pacman -S --needed --noconfirm --noprogressbar \
          ${MINGW_PACKAGE_PREFIX}-cc \
          ${MINGW_PACKAGE_PREFIX}-ninja
    - name: Build
      run: |
        cmake -B build_mingw -G Ninja \
          -DUSE_LIBROMFS=ON \
          -DPLATFORM_DESKTOP=ON \
          -DWIN32_TERMINAL=OFF \
          -DZLIB_USE_STATIC_LIBS=ON \
          -DUSE_${{ matrix.driver }}=ON \
          -DVERSION_BUILD=${{ github.run_number }}
        cmake --build build_mingw
        cd build_mingw
        strip Switchfin.exe
        7z a -mx=9 Switchfin-windows-${MSYSTEM_CARCH}-${DRIVER,,}.7z \
            Switchfin.exe ${MINGW_PREFIX}/bin/libmpv-2.dll
    - name: Set outputs
      id: vars
      run: echo "sha_short=${MSYSTEM_CARCH}-${DRIVER,,}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switchfin-windows-${{ steps.vars.outputs.sha_short }}
        path: build_mingw/Switchfin-*.7z

  build-msvc-x64:
    runs-on: windows-latest
    if: ${{ inputs.msvc }}
    steps:
    - name: Install xmake
      shell: powershell
      run: |
        Invoke-Expression (Invoke-Webrequest 'https://xmake.io/psget.text' -UseBasicParsing).Content
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Cache xmake packages
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-xmake
        path: |
          ${{ runner.temp }}/.xmake/packages
    - name: Build
      shell: powershell
      run: |
        $env:path+=";$env:USERPROFILE\xmake"
        $env:XMAKE_GLOBALDIR="${{ runner.temp }}"
        xmake config -c -y
        xmake build -y
        cd build\windows\x64\release
        7z a -mx=9 "$env:GITHUB_WORKSPACE\Switchfin-windows-msvc.7z" *
    - name: Set outputs
      id: vars
      shell: bash
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: switchfin-msvc-${{ steps.vars.outputs.sha_short }}
        path: Switchfin-*.7z
